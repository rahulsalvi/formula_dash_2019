#ifndef COLORS_H
#define COLORS_H

#include <stdint.h>

#include "constants.h"

inline uint32_t red(uint8_t x) {
    return (((uint32_t)x) << 8);
}

inline uint32_t grn(uint8_t x) {
    return (((uint32_t)x) << 0);
}

inline uint32_t blu(uint8_t x) {
    return (((uint32_t)x) << 16);
}

inline uint32_t wht(uint8_t x) {
    return (((uint32_t)x) << 24);
}

#define OFF 0
#define RED 1
#define GRN 2
#define BLU 3
#define WHT 4
#define YLW 5
#define PRP 6
#define CYN 7

static const uint32_t colors[256] = {
    0,                                 // off
    red(BRIGHTNESS),                   // red
    grn(BRIGHTNESS),                   // green
    blu(BRIGHTNESS),                   // blue
    wht(BRIGHTNESS),                   // white
    red(BRIGHTNESS) + grn(BRIGHTNESS), // yellow
    red(BRIGHTNESS) + blu(BRIGHTNESS), // purple
    grn(BRIGHTNESS) + blu(BRIGHTNESS)  // cyan
};

#define INIT_STEPS 42
static const uint8_t init_sequence_tach[INIT_STEPS][16] = {
    {WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED},
    {WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, RED, RED}};

static const uint8_t init_sequence_coolant[INIT_STEPS][16] = {
    {WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, OFF},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, WHT, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, WHT, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, WHT, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, WHT, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, WHT, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, RED},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, RED, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, RED, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, YLW, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, YLW, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, BLU, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, BLU, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, BLU, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, BLU, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, BLU, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {WHT, WHT, WHT, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF}};

static const uint8_t init_sequence_shift_lights[INIT_STEPS][16] = {
    {GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN},
    {GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN},
    {GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, OFF, OFF, OFF, OFF, OFF, OFF, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, YLW, OFF, OFF, OFF, OFF, YLW, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, YLW, RED, OFF, OFF, RED, YLW, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, YLW, RED, RED, RED, RED, YLW, YLW, GRN, GRN, GRN, GRN},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU, BLU},
    {GRN, GRN, GRN, GRN, YLW, YLW, RED, RED, RED, RED, YLW, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, YLW, RED, OFF, OFF, RED, YLW, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, YLW, OFF, OFF, OFF, OFF, YLW, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, YLW, OFF, OFF, OFF, OFF, OFF, OFF, YLW, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN, GRN, GRN},
    {GRN, GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN, GRN},
    {GRN, GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN, GRN},
    {GRN, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, GRN},
    {OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF, OFF}};

#endif // COLORS_H
